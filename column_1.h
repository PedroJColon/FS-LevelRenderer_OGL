// "column_1.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "column_1.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _column_1_version_
const char column_1_version[4] = { '0','1','9','d' };
#define _column_1_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _column_1_vertexcount_
const unsigned column_1_vertexcount = 132;
#define _column_1_vertexcount_
#endif
#ifndef _column_1_indexcount_
const unsigned column_1_indexcount = 180;
#define _column_1_indexcount_
#endif
#ifndef _column_1_materialcount_
const unsigned column_1_materialcount = 2; // can be used for batched draws
#define _column_1_materialcount_
#endif
#ifndef _column_1_meshcount_
const unsigned column_1_meshcount = 2;
#define _column_1_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _column_1_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT column_1_vertices[132] =
{
	{	{ 0.318353f, -0.000000f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.318359f, 0.000000f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.318353f, 0.000000f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.318353f, 2.172402f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.318353f, -0.000000f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.318359f, 0.000000f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.318353f, -0.000000f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.318353f, 2.172402f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.318359f, -0.000000f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.318353f, 0.000000f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.318353f, 2.172402f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.318353f, 2.172402f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.318353f, 0.000000f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.318359f, -0.000000f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.318359f, 0.000000f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.318359f, -0.000000f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.341771f, 2.295259f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.342145f, 2.295259f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.342145f, 4.463406f, -0.342146f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ 0.329396f, 2.275451f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, 0.999600f, 0.000000f }	},
	{	{ 0.329756f, 2.275451f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, 0.999600f, 0.000000f }	},
	{	{ 0.342145f, 2.275086f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, 0.999600f, 0.000000f }	},
	{	{ 0.341771f, 2.275086f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, 0.999600f, 0.000000f }	},
	{	{ 0.341771f, 2.275086f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.342145f, 2.275086f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.342145f, 2.200682f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.342145f, 2.200682f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.342145f, 2.275086f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767700f, -0.640800f, 0.000200f }	},
	{	{ -0.342145f, 2.200682f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767700f, -0.640800f, 0.000200f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767700f, -0.640800f, 0.000200f }	},
	{	{ -0.341771f, 2.275086f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.342145f, 2.275086f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.342145f, 2.200682f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.341771f, 4.463406f, 0.341770f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.342145f, 4.463406f, 0.342144f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.341771f, 4.463406f, -0.341772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767600f, -0.640900f, -0.000200f }	},
	{	{ 0.342145f, 2.200682f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767700f, -0.640800f, -0.000200f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767700f, -0.640800f, -0.000200f }	},
	{	{ -0.341771f, 2.295259f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.342145f, 2.295259f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.342145f, 4.463406f, 0.342144f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.342145f, 2.200682f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.342145f, 2.275086f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640700f, -0.767800f }	},
	{	{ 0.318353f, 2.172402f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640700f, -0.767800f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640700f, -0.767800f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640700f, 0.767800f }	},
	{	{ -0.318353f, 2.172402f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640700f, 0.767800f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640700f, 0.767800f }	},
	{	{ 0.341771f, 2.295259f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, -0.999600f, 0.000000f }	},
	{	{ 0.342145f, 2.295259f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, -0.999600f, 0.000000f }	},
	{	{ 0.329756f, 2.294894f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, -0.999600f, 0.000000f }	},
	{	{ 0.341771f, 4.463406f, -0.341772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.342145f, 4.463406f, 0.342144f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.342145f, 2.295259f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ -0.341771f, 2.295259f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, -0.999600f, 0.000000f }	},
	{	{ -0.342145f, 2.295259f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, -0.999600f, 0.000000f }	},
	{	{ -0.329756f, 2.294894f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, -0.999600f, 0.000000f }	},
	{	{ -0.341771f, 4.463406f, 0.341770f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.342145f, 4.463406f, -0.342146f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.342145f, 2.295259f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.341771f, 2.275086f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, 0.999600f, 0.000000f }	},
	{	{ -0.329396f, 2.275451f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, 0.999600f, 0.000000f }	},
	{	{ -0.329756f, 2.275451f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, 0.999600f, 0.000000f }	},
	{	{ -0.329396f, 2.294894f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.329756f, 2.294894f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.329756f, 2.275451f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ 0.329756f, 2.275451f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.329396f, 2.275451f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.329396f, 2.294894f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.329756f, 2.294894f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.329756f, 2.294894f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ -0.329396f, 2.294894f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ -0.329396f, 2.275451f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.329756f, 2.275451f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ 0.329396f, 2.275451f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.329756f, 2.275451f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.329756f, 2.294894f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ 0.341771f, 2.295259f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029400f }	},
	{	{ 0.329396f, 2.294894f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029400f }	},
	{	{ -0.329756f, 2.294894f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029400f }	},
	{	{ -0.341771f, 2.275086f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, 0.029500f }	},
	{	{ 0.342145f, 2.275086f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, 0.029500f }	},
	{	{ 0.329756f, 2.275451f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, 0.029500f }	},
	{	{ -0.341771f, 2.295259f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029400f }	},
	{	{ -0.329396f, 2.294894f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029400f }	},
	{	{ 0.329756f, 2.294894f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029400f }	},
	{	{ 0.341771f, 2.275086f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, -0.029500f }	},
	{	{ -0.342145f, 2.275086f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, -0.029500f }	},
	{	{ -0.329756f, 2.275451f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, -0.029500f }	},
	{	{ 0.341771f, 4.463406f, -0.341772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ 0.341771f, 2.275086f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ -0.342145f, 4.463406f, -0.342146f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767800f, -0.640700f, -0.000200f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767800f, -0.640700f, -0.000200f }	},
	{	{ 0.318353f, 2.172402f, -0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.767800f, -0.640700f, -0.000200f }	},
	{	{ 0.341771f, 2.200682f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640800f, -0.767700f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640800f, -0.767700f }	},
	{	{ -0.342145f, 2.200682f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.640800f, -0.767700f }	},
	{	{ 0.341771f, 2.295259f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000500f }	},
	{	{ -0.341771f, 4.463406f, 0.341770f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ -0.341771f, 2.275086f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, -0.000000f, 1.000000f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640800f, 0.767700f }	},
	{	{ 0.318359f, 2.172402f, 0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640800f, 0.767700f }	},
	{	{ 0.342145f, 2.200682f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, -0.640800f, 0.767700f }	},
	{	{ 0.329396f, 2.294894f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.029500f, -0.999600f, 0.000000f }	},
	{	{ -0.341771f, 2.295259f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029500f }	},
	{	{ 0.329756f, 2.294894f, 0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029500f }	},
	{	{ 0.342145f, 2.295259f, 0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, 0.029500f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767800f, -0.640700f, 0.000200f }	},
	{	{ -0.318359f, 2.172402f, -0.318359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767800f, -0.640700f, 0.000200f }	},
	{	{ -0.318353f, 2.172402f, 0.318353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.767800f, -0.640700f, 0.000200f }	},
	{	{ -0.341771f, 2.200682f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.329396f, 2.294894f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, -0.999600f, 0.000000f }	},
	{	{ -0.341771f, 2.295259f, 0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ -0.342145f, 2.275086f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029500f, 0.999600f, 0.000000f }	},
	{	{ -0.329396f, 2.275451f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000500f }	},
	{	{ 0.329396f, 2.294894f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000500f, -0.000000f, -1.000000f }	},
	{	{ 0.341771f, 2.295259f, -0.341771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029500f }	},
	{	{ -0.329756f, 2.294894f, -0.329756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029500f }	},
	{	{ -0.342145f, 2.295259f, -0.342145f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999600f, -0.029500f }	},
	{	{ 0.329396f, 2.275451f, -0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, -0.029500f }	},
	{	{ -0.329396f, 2.275451f, 0.329396f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.999600f, 0.029500f }	},
};
#define _column_1_vertices_
#endif
#ifndef _column_1_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int column_1_indices[180] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 3, 5, 15,
	 6, 8, 16,
	 12, 14, 17,
	 9, 11, 18,
	 0, 2, 19,
	 20, 21, 22,
	 23, 24, 25,
	 26, 23, 25,
	 27, 28, 29,
	 30, 31, 32,
	 33, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 42, 43, 44,
	 45, 46, 47,
	 48, 49, 50,
	 51, 52, 53,
	 54, 55, 56,
	 57, 58, 59,
	 60, 61, 62,
	 63, 64, 65,
	 66, 67, 68,
	 69, 70, 71,
	 72, 73, 74,
	 75, 76, 77,
	 78, 75, 77,
	 79, 80, 81,
	 82, 79, 81,
	 83, 84, 85,
	 86, 87, 88,
	 89, 90, 91,
	 92, 93, 94,
	 95, 96, 97,
	 20, 22, 98,
	 27, 29, 99,
	 30, 32, 100,
	 39, 41, 101,
	 102, 103, 104,
	 105, 106, 107,
	 60, 62, 108,
	 45, 47, 109,
	 48, 50, 110,
	 111, 112, 113,
	 57, 59, 114,
	 115, 116, 117,
	 118, 119, 120,
	 36, 38, 121,
	 63, 65, 122,
	 66, 68, 123,
	 69, 71, 124,
	 72, 74, 125,
	 83, 85, 126,
	 127, 128, 129,
	 95, 97, 130,
	 89, 91, 131,
};
#define _column_1_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _column_1_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL column_1_materials[2] =
{
	{
		{{ 0.191638f, 0.191638f, 0.191638f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078453f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"DarkGrey",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.321571f, 0.321571f, 0.321571f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078453f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Main",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _column_1_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _column_1_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int column_1_batches[2][2] =
{
	{ 30, 0 },
	{ 150, 30 },
};
#define _column_1_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _column_1_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH column_1_meshes[2] =
{
	{
		"default",
		30,
		0,
		0,
	},
	{
		"default",
		150,
		30,
		1,
	},
};
#define _column_1_meshes_
#endif
